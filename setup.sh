view_logs() {
  # make sure log dir exists (for saved exports)
  mkdir -p "$LOG_DIR"

  # find candidate service units that mention 'cloud' or 'cloudflare'
  echo "üîé Searching for related systemd units..."
  candidates=$(systemctl list-units --type=service --all --no-legend | awk '{print $1, $2, $3, $4}' | grep -iE 'cloud|cloudflare' || true)

  if [ -z "$candidates" ]; then
    echo "‚ö†Ô∏è Ÿá€å⁄Ü ÿ≥ÿ±Ÿà€åÿ≥ systemd ŸÖÿ±ÿ™ÿ®ÿ∑ Ÿæ€åÿØÿß ŸÜÿ¥ÿØ."
    echo "ŸÑ€åÿ≥ÿ™ ⁄©ÿßŸÖŸÑ ÿ≥ÿ±Ÿà€åÿ≥‚ÄåŸáÿß ⁄©Ÿá ÿπÿ®ÿßÿ±ÿ™ cloud €åÿß cloudflare ÿ±ÿß ÿØÿßÿ±ŸÜÿØ:"
    systemctl list-units --type=service --all | grep -iE 'cloud|cloudflare' || true
    echo ""
    echo "ÿß⁄Øÿ± ŸÖ€å‚ÄåÿÆŸàÿßŸá€å ŸáŸÜŸàÿ≤ ŸÑÿß⁄Ø‚Äåÿ¥ ÿ±ÿß ÿ®ÿ®€åŸÜ€åÿå ŸÜÿßŸÖ unit ÿ±ÿß Ÿàÿßÿ±ÿØ ⁄©ŸÜ (€åÿß Enter ÿ®ÿ±ÿß€å ÿ®ÿßÿ≤⁄Øÿ¥ÿ™):"
    read -p "Unit name: " maybe_unit
    if [ -z "$maybe_unit" ]; then
      read -p "‚èé Press Enter to return to the menu..." _
      return
    else
      UNIT="$maybe_unit"
    fi
  else
    echo "üîî ÿ≥ÿ±Ÿà€åÿ≥‚ÄåŸáÿß€å Ÿæ€åÿØÿß ÿ¥ÿØŸá:"
    echo "$candidates"
    echo ""
    echo "ŸÑÿ∑ŸÅÿßŸã ŸÜÿßŸÖ ÿØŸÇ€åŸÇ unit ÿ±ÿß Ÿàÿßÿ±ÿØ ⁄©ŸÜ (ŸÖÿ´ŸÑÿßŸã cloudflarebot.service) €åÿß Enter ÿ®ÿ±ÿß€å ÿßŸÜÿ™ÿÆÿßÿ® ÿßŸàŸÑ€åŸÜ ŸÖŸàÿ±ÿØ:"
    read -p "Unit name: " UNIT
    if [ -z "$UNIT" ]; then
      # pick the first column (unit name) of first candidate
      UNIT=$(echo "$candidates" | head -n1 | awk '{print $1}')
    fi
  fi

  if [ -z "$UNIT" ]; then
    echo "‚ùå Ÿàÿßÿ≠ÿØ€å ÿßŸÜÿ™ÿÆÿßÿ® ŸÜÿ¥ÿØŸá. ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÖŸÜŸà."
    read -p "‚èé Press Enter to return to the menu..." _
    return
  fi

  # permissive: run journalctl even if unit is inactive
  while true; do
    clear
    echo "‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì"
    echo "‚îÉ      View logs for $UNIT      ‚îÉ"
    echo "‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ"
    echo "1) üìÑ Show last 200 lines"
    echo "2) ‚ñ∂Ô∏è Follow live (journalctl -f)"
    echo "3) üîé Open with less (paged)"
    echo "4) üíæ Save last 1000 lines to file"
    echo "0) üîô Back to main menu"
    echo ""
    read -p "Choose: " lchoice

    case $lchoice in
      1)
        echo "----- Last 200 lines -----"
        sudo journalctl -u "$UNIT" -n 200 --no-pager || sudo journalctl | grep -i "$UNIT" || true
        echo "--------------------------"
        read -p "‚èé Press Enter to continue..." _
        ;;
      2)
        echo "----- Following logs (Ctrl+C to stop) -----"
        sudo journalctl -u "$UNIT" -f
        ;;
      3)
        # pipe to less for paging (use --no-pager to get full output then less)
        sudo journalctl -u "$UNIT" --no-pager | less
        ;;
      4)
        TIMESTAMP=$(date +"%F_%H%M%S")
        OUTFILE="$LOG_DIR/${UNIT}_logs_${TIMESTAMP}.log"
        echo "Saving last 1000 lines to $OUTFILE ..."
        sudo journalctl -u "$UNIT" -n 1000 --no-pager > "$OUTFILE" 2>/dev/null || sudo journalctl | grep -i "$UNIT" > "$OUTFILE" || true
        echo "‚úÖ Saved to $OUTFILE"
        read -p "‚èé Press Enter to continue..." _
        ;;
      0)
        break
        ;;
      *)
        echo "‚ùå Invalid option"
        sleep 1
        ;;
    esac
  done
}
